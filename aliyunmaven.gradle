apply plugin: 'maven'
// 上传到本地
def _local = true
// 是否未快照模式
def _snapshot = false
// 组id
def _groupId = "org.ms"
// 项目id
def _artifactId = "webrtc-common-request-response"
// 发布类型 aar jar
def _packaging = "jar"
// 发布版本
def _releaseVersion = "latest"
// 快照版本
def _snapohotVersion = "latest-SNAPSHOT"


if (_local) {
    uploadArchives {
        repositories {
            mavenDeployer {
                repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
                if (_snapshot) {
                    // 版本
                    pom.version = _snapohotVersion
                } else {
                    // 版本呢
                    pom.version = _releaseVersion
                }
                pom.artifactId = _artifactId
                pom.groupId = _groupId
            }
        }
    }
} else {
    uploadArchives {
        repositories.mavenDeployer {
            repository(url: "https://repo.rdc.aliyun.com/repository/73792-release-PXkyIy/") {

                authentication(userName: System.getenv("ALIYUN_MAVEN_USERNAME"), password: System.getenv("ALIYUN_MAVEN_PASSWORD"))
                //authentication(userName: "KwPAxj", password: "KKnP3maIK3")
            }
            snapshotRepository(url: "https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/") {
                //authentication(userName: "KwPAxj", password: "KKnP3maIK3")
                authentication(userName: System.getenv("ALIYUN_MAVEN_USERNAME"), password: System.getenv("ALIYUN_MAVEN_PASSWORD"))
            }
            pom.project {
                // 注意：【这里通过切换 versionName 的赋值来区分上传快照包还是正式包（snapshot 版本必须以 -SNAPSHOT 结尾）】
                //version snapshotVersionName
                //组 maven_pom_groupid
                pom.artifactId = _artifactId
                pom.groupId = _groupId
                //  类型
                packaging _packaging
                // 描述
                description ""
                // 版本
                if (_snapshot) {
                    version = _snapohotVersion
                } else {
                    version = _releaseVersion
                }
            }
        }
    }
}

